/**
 * @defgroup pkg_wamr WebAssembly Micro Runtime
 * @ingroup  pkg
 * @brief    Provides WebAssembly support for RIOT
 * @see      https://github.com/bytecodealliance/wasm-micro-runtime
 *
 * # WebAssembly Micro Runtime Riot Package
 *
 * "WebAssembly Micro Runtime (WAMR) is a standalone WebAssembly (WASM)
 * runtime with a small footprint."
 *
 * @see      https://github.com/bytecodealliance/wasm-micro-runtime
 *
 * # Status
 *
 * WAMR integration into RIOT should be considered experimental.
 * Changes that had to be done in WAMR are send to and integrated into upstream.
 * WAMR provides support for numerous architectures:
 *
 * "X86_32", "AARCH64", "ARM", "THUMB", "MIPS", "XTENSA" and "RISCV"
 * tested : Cortex-M - "THUMB", native - "X86_32"
 *
 * WebAssembly defines its pages to be 64kB -> WAMR needs a good amount of RAM to run.
 *
 * WASM files can be linked to use just a part of the first page.
 * In this case the VM can be run with less ram.
 * (see `wasm_sample/Makefile` in `examples/wasm` for linker options to help with this)
 * While running the example configured with 8KiB Heap and 8KiB Stack,
 * ~24KiB of System Heap are used.
 * The thread, the WAMR interpreter (iwasm) is executed in,
 * should be configured to have more than 3KiB of Stack,
 * this also depend on the architecture and the native functions that are called.
 *
 * ## Configuration
 *
 * WAMR compilation is configured using a CMAKE config file (see `pkg/wamr/config.cmake`)
 * Add `export WAMR_CONFIG := $(abspath config.cmake)` to Makefile to apply a specific config.
 * Most options (e.g. WASI) are not supported in RIOT since they have OS requirements that are no yet fulfilled.
 *
 * ## Details
 *
 * WAMR should be used using the functions provided by the WAMR project
 * see the example in `examples/wasm` there are currently no riot specialities provided
 *
 * While WebAssembly does not define a set native functions. WAMR provides its own builtin-libc.
 * Other native functions may be provided by registering native_api to WAMR.
 * @see https://github.com/bytecodealliance/wasm-micro-runtime/blob/main/doc/export_native_api.md
 *
 */
